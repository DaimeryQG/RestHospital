package com.imss.qro.service;

import java.util.List;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.imss.qro.models.Cita;
import com.imss.qro.repository.CitaRepository;

@Service
public class CitaService {

    @Autowired
    private CitaRepository citaRepository;

    // Metodo para Obtener todas las citas
    public List<Cita> obtenerTodasLasCitas() {
        return citaRepository.findAll();
    }

    // Metodo para Obtener las citas por ID
    public Optional<Cita> obtenerCitaPorId(Integer id) {
        return citaRepository.findById(id);
    }

    // Método para Crear las citas
    public String registrarCita(Cita cita) {
        Cita nuevaCita = citaRepository.save(cita);
        if (nuevaCita != null) {
            return "La cita ID " + nuevaCita.getCitaId() + " fue creada con éxito.";
        } else {
            return "No se pudo crear la cita.";
        }
    }

    // Metodo para Actualizar las citas
    public String actualizarCita(Integer id, Cita detallesCita) {
        return citaRepository.findById(id).map(cita -> {
            cita.setPacienteId(detallesCita.getPacienteId());
            cita.setDoctorId(detallesCita.getDoctorId());
            cita.setFechaCita(detallesCita.getFechaCita());
            cita.setNotificado(detallesCita.getNotificado());
            cita.setMotivo(detallesCita.getMotivo());
            cita.setNotas(detallesCita.getNotas());
            cita.setFechaHora(detallesCita.getFechaHora());
            cita.setInsumoId(detallesCita.getInsumoId());
            cita.setCantidadUsada(detallesCita.getCantidadUsada());
            citaRepository.save(cita);
            return "Cita con ID " + id + " actualizada con éxito.";
        }).orElse("Cita con ID " + id + " no encontrada.");
    }

    // Metodo para Eliminar las citas
    public String eliminarCita(Integer id) {
        Optional<Cita> citaOptional = citaRepository.findById(id);
        if (citaOptional.isPresent()) {
            citaRepository.deleteById(id);
            return "La cita con ID " + id + " fue eliminada exitosamente.";
        } else {
            throw new IllegalArgumentException("No se encontró ninguna cita con ID " + id);
        }
    }
}